{"version":3,"file":"AdminChat-495ebd0f.js","sources":["../../src/pages/AdminChat.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ArrowLeft, MessageCircle, Clock, CheckCircle, X, Send, User } from 'lucide-react';\nimport { chatSystem, ChatSession, ChatMessage } from '../utils/chatSystem';\nimport AdminMenu from '../components/AdminMenu';\n\ninterface AdminChatProps {}\n\nconst AdminChat: React.FC<AdminChatProps> = () => {\n  const navigate = useNavigate();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [sessions, setSessions] = useState<ChatSession[]>([]);\n  const [selectedSession, setSelectedSession] = useState<ChatSession | null>(null);\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [activeTab, setActiveTab] = useState<'waiting' | 'active' | 'closed' | 'resolved'>('waiting');\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    loadSessions();\n    const interval = setInterval(loadSessions, 5000); // Refresh every 5 seconds\n    return () => clearInterval(interval);\n  }, []);\n\n  useEffect(() => {\n    if (selectedSession) {\n      loadMessages(selectedSession.id);\n      const interval = setInterval(() => loadMessages(selectedSession.id), 3000);\n      return () => clearInterval(interval);\n    }\n  }, [selectedSession]);\n\n  const loadSessions = () => {\n    try {\n      const allSessions = chatSystem.getAllSessions();\n      setSessions(allSessions);\n    } catch (error) {\n      console.error('Failed to load chat sessions:', error);\n    }\n  };\n\n  const loadMessages = (sessionId: string) => {\n    try {\n      const sessionMessages = chatSystem.getSessionMessages(sessionId);\n      setMessages(sessionMessages);\n    } catch (error) {\n      console.error('Failed to load messages:', error);\n    }\n  };\n\n  const handleSelectSession = async (session: ChatSession) => {\n    setIsLoading(true);\n    try {\n      setSelectedSession(session);\n      loadMessages(session.id);\n      \n      // Assign session to admin if it's waiting\n      if (session.status === 'waiting') {\n        await chatSystem.assignSessionToAdmin(session.id, 'admin-1', 'Admin');\n        // Refresh sessions to update the status\n        setTimeout(() => {\n          loadSessions();\n          // Re-select the updated session\n          const updatedSessions = chatSystem.getAllSessions();\n          const updatedSession = updatedSessions.find(s => s.id === session.id);\n          if (updatedSession) {\n            setSelectedSession(updatedSession);\n          }\n        }, 100);\n      }\n    } catch (error) {\n      console.error('Error selecting session:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (!newMessage.trim() || !selectedSession) return;\n\n    setIsLoading(true);\n    try {\n      // Ensure session is assigned to admin if it's waiting\n      if (selectedSession.status === 'waiting') {\n        await chatSystem.assignSessionToAdmin(selectedSession.id, 'admin-1', 'Admin');\n      }\n\n      await chatSystem.sendMessage(\n        selectedSession.id,\n        'admin-1',\n        'Admin',\n        'admin@investwisepro.com',\n        newMessage.trim(),\n        true // isAdmin = true\n      );\n\n      setNewMessage('');\n      loadMessages(selectedSession.id);\n      loadSessions(); // Refresh sessions to update last message\n    } catch (error) {\n      console.error('Error sending message:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleCloseSession = () => {\n    if (!selectedSession) return;\n    \n    chatSystem.closeSession(selectedSession.id);\n    setSelectedSession(null);\n    setMessages([]);\n    loadSessions();\n  };\n\n  const handleResolveSession = () => {\n    if (!selectedSession) return;\n    \n    chatSystem.resolveSession(selectedSession.id);\n    setSelectedSession(null);\n    setMessages([]);\n    loadSessions();\n  };\n\n  const handleDeleteSession = () => {\n    if (!selectedSession) return;\n    \n    if (window.confirm(`Are you sure you want to delete ticket ${selectedSession.ticketNumber}? This action cannot be undone.`)) {\n      chatSystem.deleteSession(selectedSession.id);\n      setSelectedSession(null);\n      setMessages([]);\n      loadSessions();\n    }\n  };\n\n  const handleDeleteAllSessions = () => {\n    const filteredSessions = getFilteredSessions();\n    if (filteredSessions.length === 0) return;\n    \n    const sessionType = activeTab === 'closed' ? 'closed' : 'resolved';\n    if (window.confirm(`Are you sure you want to delete all ${sessionType} tickets? This action cannot be undone.`)) {\n      filteredSessions.forEach(session => {\n        chatSystem.deleteSession(session.id);\n      });\n      setSelectedSession(null);\n      setMessages([]);\n      loadSessions();\n    }\n  };\n\n  const getFilteredSessions = () => {\n    switch (activeTab) {\n      case 'waiting':\n        return sessions.filter(s => s.status === 'waiting');\n      case 'active':\n        return sessions.filter(s => s.status === 'active');\n      case 'closed':\n        return sessions.filter(s => s.status === 'closed');\n      case 'resolved':\n        return sessions.filter(s => s.status === 'resolved');\n      default:\n        return sessions;\n    }\n  };\n\n  const formatTime = (timestamp: string) => {\n    return new Date(timestamp).toLocaleTimeString('en-US', { \n      hour: '2-digit', \n      minute: '2-digit' \n    });\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'waiting':\n        return 'bg-yellow-500/20 text-yellow-400';\n      case 'active':\n        return 'bg-green-500/20 text-green-400';\n      case 'resolved':\n        return 'bg-purple-500/20 text-purple-400';\n      case 'closed':\n        return 'bg-gray-500/20 text-gray-400';\n      default:\n        return 'bg-gray-500/20 text-gray-400';\n    }\n  };\n\n  const getStatusIcon = (status: string) => {\n    switch (status) {\n      case 'waiting':\n        return <Clock size={16} />;\n      case 'active':\n        return <CheckCircle size={16} />;\n      case 'resolved':\n        return <CheckCircle size={16} />;\n      case 'closed':\n        return <X size={16} />;\n      default:\n        return <MessageCircle size={16} />;\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900\">\n      {/* Admin Menu */}\n      <AdminMenu isOpen={isMenuOpen} onToggle={() => setIsMenuOpen(!isMenuOpen)} />\n      \n      {/* Header */}\n      <div className=\"bg-white/10 backdrop-blur-xl border-b border-white/20 lg:ml-64\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={() => navigate('/admin')}\n                className=\"flex items-center space-x-2 text-white/80 hover:text-white transition-colors\"\n              >\n                <ArrowLeft size={20} />\n                <span>Back to Dashboard</span>\n              </button>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <h1 className=\"text-2xl font-bold text-white flex items-center space-x-2\">\n                <MessageCircle size={28} />\n                <span>Live Chat Management</span>\n              </h1>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Main Content */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 lg:ml-64\">\n        <div className=\"grid grid-cols-1 xl:grid-cols-3 gap-4 lg:gap-6 h-[calc(100vh-200px)]\">\n          {/* Sessions List */}\n          <div className=\"xl:col-span-1 bg-white/10 backdrop-blur-xl rounded-2xl border border-white/20 overflow-hidden\">\n            {/* Tab Navigation */}\n            <div className=\"flex bg-white/5 border-b border-white/20 overflow-x-auto\">\n              {/* Delete All Button for Closed/Resolved tabs */}\n              {(activeTab === 'closed' || activeTab === 'resolved') && getFilteredSessions().length > 0 && (\n                <button\n                  onClick={handleDeleteAllSessions}\n                  className=\"flex-shrink-0 px-3 py-2 text-xs font-medium bg-red-500/20 hover:bg-red-500/30 text-red-400 border-r border-white/20 transition-colors\"\n                  title={`Delete all ${activeTab} tickets`}\n                >\n                  Delete All\n                </button>\n              )}\n              <button\n                onClick={() => setActiveTab('waiting')}\n                className={`flex-shrink-0 px-3 lg:px-4 py-2 lg:py-3 text-xs lg:text-sm font-medium transition-colors whitespace-nowrap ${\n                  activeTab === 'waiting'\n                    ? 'bg-white/10 text-white border-b-2 border-blue-400'\n                    : 'text-white/60 hover:text-white'\n                }`}\n              >\n                Waiting ({sessions.filter(s => s.status === 'waiting').length})\n              </button>\n              <button\n                onClick={() => setActiveTab('active')}\n                className={`flex-shrink-0 px-3 lg:px-4 py-2 lg:py-3 text-xs lg:text-sm font-medium transition-colors whitespace-nowrap ${\n                  activeTab === 'active'\n                    ? 'bg-white/10 text-white border-b-2 border-green-400'\n                    : 'text-white/60 hover:text-white'\n                }`}\n              >\n                Active ({sessions.filter(s => s.status === 'active').length})\n              </button>\n              <button\n                onClick={() => setActiveTab('resolved')}\n                className={`flex-shrink-0 px-3 lg:px-4 py-2 lg:py-3 text-xs lg:text-sm font-medium transition-colors whitespace-nowrap ${\n                  activeTab === 'resolved'\n                    ? 'bg-white/10 text-white border-b-2 border-purple-400'\n                    : 'text-white/60 hover:text-white'\n                }`}\n              >\n                Resolved ({sessions.filter(s => s.status === 'resolved').length})\n              </button>\n              <button\n                onClick={() => setActiveTab('closed')}\n                className={`flex-shrink-0 px-3 lg:px-4 py-2 lg:py-3 text-xs lg:text-sm font-medium transition-colors whitespace-nowrap ${\n                  activeTab === 'closed'\n                    ? 'bg-white/10 text-white border-b-2 border-gray-400'\n                    : 'text-white/60 hover:text-white'\n                }`}\n              >\n                Closed ({sessions.filter(s => s.status === 'closed').length})\n              </button>\n            </div>\n\n            {/* Sessions */}\n            <div className=\"overflow-y-auto h-full\">\n              {getFilteredSessions().length === 0 ? (\n                <div className=\"p-6 text-center\">\n                  <MessageCircle className=\"mx-auto text-white/40 mb-4\" size={32} />\n                  <p className=\"text-white/60\">No {activeTab} sessions</p>\n                </div>\n              ) : (\n                <div className=\"divide-y divide-white/10\">\n                  {getFilteredSessions().map((session) => (\n                    <div\n                      key={session.id}\n                      onClick={() => handleSelectSession(session)}\n                      className={`p-3 lg:p-4 cursor-pointer transition-colors hover:bg-white/5 ${\n                        selectedSession?.id === session.id ? 'bg-white/10' : ''\n                      }`}\n                    >\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <div className=\"flex items-center space-x-2\">\n                          <div className={`p-1 rounded-full ${getStatusColor(session.status)}`}>\n                            {getStatusIcon(session.status)}\n                          </div>\n                          <div>\n                            <span className=\"font-medium text-white\">{session.ticketNumber}</span>\n                            <span className=\"text-white/60 text-xs ml-2\">{session.userName}</span>\n                          </div>\n                        </div>\n                        <span className=\"text-xs text-white/60\">{formatTime(session.lastActivity)}</span>\n                      </div>\n                      <p className=\"text-sm text-white/70 truncate\">{session.lastMessage || 'No messages yet'}</p>\n                      <div className=\"flex items-center justify-between mt-2\">\n                        <span className=\"text-xs text-white/50\">{session.userEmail}</span>\n                        {session.unreadCount > 0 && (\n                          <span className=\"bg-blue-500 text-white text-xs px-2 py-1 rounded-full\">\n                            {session.unreadCount}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Chat Area */}\n          <div className=\"xl:col-span-2 bg-white/10 backdrop-blur-xl rounded-2xl border border-white/20 overflow-hidden flex flex-col\">\n            {selectedSession ? (\n              <>\n                {/* Chat Header */}\n                <div className=\"p-3 lg:p-4 border-b border-white/20 bg-white/5\">\n                  <div className=\"flex items-center justify-between\">\n                    <div className=\"flex items-center space-x-2 lg:space-x-3 min-w-0 flex-1\">\n                      <div className=\"w-8 h-8 lg:w-10 lg:h-10 bg-blue-500 rounded-full flex items-center justify-center flex-shrink-0\">\n                        <User className=\"text-white\" size={16} />\n                      </div>\n                      <div className=\"min-w-0 flex-1\">\n                        <h3 className=\"font-semibold text-white text-sm lg:text-base truncate\">{selectedSession.ticketNumber} - {selectedSession.userName}</h3>\n                        <p className=\"text-xs lg:text-sm text-white/60 truncate\">{selectedSession.userEmail}</p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center space-x-1 lg:space-x-2 flex-shrink-0\">\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(selectedSession.status)}`}>\n                        {selectedSession.status}\n                      </span>\n                      {selectedSession.status === 'active' && (\n                        <button\n                          onClick={handleResolveSession}\n                          className=\"bg-green-500 hover:bg-green-600 text-white px-2 lg:px-3 py-1 rounded text-xs font-medium transition-colors\"\n                          title=\"Resolve Ticket\"\n                        >\n                          Resolve\n                        </button>\n                      )}\n                      {(selectedSession.status === 'closed' || selectedSession.status === 'resolved') && (\n                        <button\n                          onClick={handleDeleteSession}\n                          className=\"bg-red-500 hover:bg-red-600 text-white px-2 lg:px-3 py-1 rounded text-xs font-medium transition-colors\"\n                          title=\"Delete Ticket\"\n                        >\n                          Delete\n                        </button>\n                      )}\n                      <button\n                        onClick={handleCloseSession}\n                        className=\"p-1 lg:p-2 text-white/60 hover:text-white transition-colors\"\n                        title=\"Close Session\"\n                      >\n                        <X size={14} />\n                      </button>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Messages */}\n                <div className=\"flex-1 overflow-y-auto p-4 space-y-4 min-h-0\">\n                  {messages.length === 0 ? (\n                    <div className=\"text-center py-8\">\n                      <MessageCircle className=\"mx-auto text-white/40 mb-4\" size={32} />\n                      <p className=\"text-white/60\">No messages yet</p>\n                      <p className=\"text-white/40 text-sm\">Start the conversation</p>\n                    </div>\n                  ) : (\n                    messages.map((message) => (\n                      <div\n                        key={message.id}\n                        className={`flex ${message.isAdmin ? 'justify-end' : 'justify-start'}`}\n                      >\n                        <div className={`max-w-xs lg:max-w-md p-3 rounded-lg ${\n                          message.isAdmin \n                            ? 'bg-blue-500/20 text-white' \n                            : 'bg-white/10 text-white'\n                        }`}>\n                          <div className=\"flex items-center justify-between mb-1\">\n                            <span className=\"text-xs font-medium opacity-70\">\n                              {message.isAdmin ? 'Admin' : selectedSession.userName}\n                            </span>\n                            <span className=\"text-xs opacity-60\">{formatTime(message.timestamp)}</span>\n                          </div>\n                          <p className=\"text-sm\">{message.message}</p>\n                        </div>\n                      </div>\n                    ))\n                  )}\n                </div>\n\n                {/* Message Input - Always visible when session is selected */}\n                <div className=\"p-3 lg:p-4 border-t border-white/20 bg-white/5\">\n                  <div className=\"flex space-x-2\">\n                    <input\n                      type=\"text\"\n                      value={newMessage}\n                      onChange={(e) => setNewMessage(e.target.value)}\n                      onKeyPress={(e) => e.key === 'Enter' && !isLoading && handleSendMessage()}\n                      placeholder=\"Type your message...\"\n                      disabled={isLoading}\n                      className=\"flex-1 bg-white/10 backdrop-blur-lg border border-white/20 rounded-lg px-2 lg:px-3 py-2 text-white placeholder-white/50 focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:border-blue-500/50 text-xs lg:text-sm disabled:opacity-50\"\n                    />\n                    <button\n                      onClick={handleSendMessage}\n                      disabled={!newMessage.trim() || isLoading}\n                      className=\"bg-blue-500 hover:bg-blue-600 disabled:bg-gray-500 disabled:cursor-not-allowed text-white p-2 rounded-lg transition-colors flex-shrink-0\"\n                    >\n                      <Send size={14} />\n                    </button>\n                  </div>\n                  {isLoading && (\n                    <div className=\"mt-2 text-xs text-white/60\">\n                      Processing...\n                    </div>\n                  )}\n                </div>\n              </>\n            ) : (\n              <div className=\"flex items-center justify-center h-full\">\n                <div className=\"text-center\">\n                  <MessageCircle className=\"mx-auto text-white/40 mb-4\" size={48} />\n                  <h3 className=\"text-white font-medium mb-2\">Select a Chat Session</h3>\n                  <p className=\"text-white/60 text-sm\">Choose a session from the list to start chatting</p>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminChat;"],"names":["AdminChat","navigate","useNavigate","isMenuOpen","setIsMenuOpen","useState","sessions","setSessions","selectedSession","setSelectedSession","messages","setMessages","newMessage","setNewMessage","activeTab","setActiveTab","isLoading","setIsLoading","useEffect","loadSessions","interval","loadMessages","allSessions","chatSystem","error","sessionId","sessionMessages","handleSelectSession","session","updatedSession","s","handleSendMessage","handleCloseSession","handleResolveSession","handleDeleteSession","handleDeleteAllSessions","filteredSessions","getFilteredSessions","sessionType","formatTime","timestamp","getStatusColor","status","getStatusIcon","jsx","Clock","CheckCircle","X","MessageCircle","jsxs","AdminMenu","ArrowLeft","Fragment","User","message","e","Send"],"mappings":"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"}